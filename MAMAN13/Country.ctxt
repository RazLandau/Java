#BlueJ class context
comment0.params=countryName
comment0.target=Country(java.lang.String)
comment0.text=\r\n\ Constructor\ a\ country.\r\n\ Construct\ a\ new\ country\ with\ a\ name\ and\ an\ array\ of\ max\ number\ of\ null\ Cities.\r\n\ @param\ countryName\ The\ name\ of\ the\ country\r\n
comment1.params=cityName\ xCenter\ yCenter\ xStation\ yStation\ numOfResidents\ noOfNeighborhoods
comment1.target=boolean\ addCity(java.lang.String,\ int,\ int,\ int,\ int,\ long,\ int)
comment1.text=\r\n\ Add\ city\ to\ Country.\r\n\ Add\ a\ city,\ with\ name,\ x\ and\ y\ parameters\ of\ cityCenter,\ x\ and\ y\ parameters\ of\ CentralStation,\ number\ of\ residents\r\n\ \ \ \ \ and\ number\ of\ neighborhoods,\ to\ the\ array\ of\ Cities\ of\ this\ country.\ Returns\ true\ if\ addition\ is\ succesful,\ returns\ false\ if\ it\ fails.\r\n\ \ \ \ \ \r\n\ @param\ cityName\ The\ name\ of\ the\ city\r\n\ @param\ xCenter\ The\ X\ coordinate\ of\ the\ city\ center\r\n\ @param\ yCenter\ The\ Y\ coordinate\ of\ the\ city\ center\r\n\ @param\ xStation\ The\ X\ coordinate\ of\ the\ central\ station\r\n\ @param\ yStation\ The\ Y\ coordinate\ of\ the\ central\ station\r\n\ @param\ numOfResidents\ The\ number\ of\ residents\r\n\ @param\ noOfNeighborhoods\ The\ number\ of\ neighborhoods\r\n\ @return\ True\ if\ addition\ is\ succesful,\ false\ if\ fails\r\n
comment10.params=
comment10.target=java.lang.String\ toString()
comment10.text=\r\n\ Returns\ a\ string\ representaion\ of\ the\ country.\r\n\ @return\ String\ representation\ of\ this\ country\r\n
comment11.params=cityName
comment11.target=boolean\ cityInArray(java.lang.String)
comment12.params=cityName
comment12.target=int\ cityLocation(java.lang.String)
comment2.params=
comment2.target=java.lang.String\ getCountryName()
comment2.text=\r\n\ Returns\ The\ coutry's\ name.\r\n\ @return\ \ This\ country's\ name\r\n
comment3.params=
comment3.target=int\ getNumOfCities()
comment3.text=\r\n\ Returns\ the\ number\ of\ cities\ in\ this\ country.\r\n\ @return\ This\ country's\ number\ of\ cities\r\n
comment4.params=
comment4.target=long\ getNumOfResidents()
comment4.text=\r\n\ Returns\ the\ number\ of\ residents\ in\ the\ country.\r\n\ @return\ This\ country's\ number\ of\ residents\r\n
comment5.params=
comment5.target=City\ southernmostCity()
comment5.text=\r\n\ Returns\ a\ City\ object\ representing\ the\ coutry's\ southernmost\ city.\r\n\ @return\ This\ country's\ southmost\ city\r\n
comment6.params=
comment6.target=double\ longestDistance()
comment6.text=\r\n\ Calculates\ the\ furthest\ distance\ between\ any\ 2\ cities\ in\ the\ country.\r\n\ @return\ double\ representing\ the\ furthest\ distance\ between\ any\ two\ cities\ in\ this\ country\r\n
comment7.params=cityName
comment7.target=java.lang.String\ citiesNorthOf(java.lang.String)
comment7.text=\r\n\ Returns\ a\ string\ of\ all\ cities\ north\ of\ given\ city\ in\ the\ country.\r\n\ Checks\ if\ city\ is\ in\ this\ country.\ If\ true-\ checks\ if\ there\ are\ cities\ in\ this\ country\ north\ of\ given\ city.\ If\ true-\ returns\ a\ string\ of\ all\ northen\ cities.\r\n\ @param\ String\ the\ name\ of\ this\ city\r\n\ @return\ String\ string\ representation\ of\ all\ cities\ north\ of\ given\ city\ in\ this\ country\r\n
comment8.params=
comment8.target=City[]\ getCities()
comment8.text=\r\n\ Returns\ an\ array\ object\ of\ all\ cities\ in\ the\ country.\r\n\ The\ new\ array's\ size\ is\ exactly\ the\ number\ of\ cities\ in\ this\ country\ (no\ "nulls").\ The\ new\ array\ holds\ a\ copy\ of\ all\ the\ cities\ in\ this\ country.\r\n\ @return\ City\ []\ new\ array\ of\ cities\r\n
comment9.params=cityName1\ cityName2
comment9.target=City\ unifyCities(java.lang.String,\ java.lang.String)
comment9.text=\r\n\ Returns\ a\ unified\ city\ of\ 2\ cities\ in\ the\ country.\r\n\ Unifies\ 2\ cities\:\r\n\ Unified\ Name\ \=\ city1name-city2name.\r\n\ Unified\ number\ of\ residents\ \=\ sum\ of\ residents\ in\ both\ cities.\r\n\ Unified\ number\ of\ neighborhoods\ \=\ sum\ of\ neighborhoods\ in\ both\ cities.\r\n\ Unified\ city\ center\ \=\ \ the\ middle\ point\ between\ the\ 2\ cities'\ centers.\r\n\ Unified\ central\ station\ \=\ the\ western\ central\ station\ of\ the\ 2\ cities.\r\n\ The\ unified\ city\ replaces\ the\ the\ city\ with\ the\ greater\ number\ of\ residents\ of\ the\ 2\ cities\ in\ this\ country.\ The\ city\ with\ fewer\ residents\ is\ deleted\ from\ this\ country.\r\n\ @param\ city1\ The\ name\ of\ the\ 1st\ city\r\n\ @param\ city2\ the\ name\ of\ the\ 2nd\ city\r\n\ @return\ City\ the\ unified\ city\r\n
numComments=13
